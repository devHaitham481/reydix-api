services:
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:9.3
    depends_on:
      reydix-db:
        condition: service_healthy
    ports:
      - "3567:3567"
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://reydix_user:Admin123@reydix-db:5432/reydix_db"
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      start_period: 5s

  reydix-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: reydix_user
      POSTGRES_PASSWORD: Admin123
      POSTGRES_DB: reydix_db
    ports:
      - "5434:5432"
    volumes:
      - reydix_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reydix_user -d reydix_db -h reydix-db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

  events-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: events_user
      POSTGRES_PASSWORD: Admin123
      POSTGRES_DB: events_db
    ports:
      - "5432:5432"
    volumes:
      - events_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U events_user -d events_db -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

  fans-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: fans_user
      POSTGRES_PASSWORD: Admin123
      POSTGRES_DB: fans_db
    ports:
      - "5433:5432"
    volumes:
      - fans_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fans_user -d fans_db -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

  events-service:
    build:
      context: .
      dockerfile: ./apps/events-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://events_user:Admin123@events-db:5432/events_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3001
      - JWT_SECRET=your-jwt-secret-key
    ports:
      - "3001:3001"
    depends_on:
      events-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"] # <--- CHANGED THIS
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  fans-service:
    build:
      context: .
      dockerfile: ./apps/fans-service/Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://fans_user:Admin123@fans-db:5432/fans_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3002
      - JWT_SECRET=your-jwt-secret-key
    ports:
      - "3002:3002"
    depends_on:
      fans-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002/health || exit 1"] # <--- CHANGED THIS
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-jwt-secret-key
      - PORT=3000
      - DB_HOST=reydix-db
      - DB_USER=reydix_user
      - DB_PASSWORD=Admin123
      - DB_NAME=reydix_db
      - DB_PORT=5432
      - EVENTS_SERVICE_URL=http://events-service:3001
      - FANS_SERVICE_URL=http://fans-service:3002
      - SUPERTOKENS_CONNECTION_URI=http://supertokens:3567
      - APP_NAME=Reydix API
      - API_DOMAIN=http://localhost:3000
      - WEBSITE_DOMAIN=http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      events-service:
        condition: service_healthy
      fans-service:
        condition: service_healthy
      supertokens:
        condition: service_healthy
      fans-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: unless-stopped

volumes:
  events_db_data:
  fans_db_data:
  reydix_db_data:
